--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone 10 LP" LPM_SIZE=2 LPM_WIDTH=18 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 17.0 cbx_lpm_mux 2017:07:19:18:07:03:SJ cbx_mgl 2017:07:19:18:10:29:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN mux_dob
( 
	data[35..0]	:	input;
	result[17..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[17..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data164w[1..0]	: WIRE;
	w_data178w[1..0]	: WIRE;
	w_data190w[1..0]	: WIRE;
	w_data202w[1..0]	: WIRE;
	w_data214w[1..0]	: WIRE;
	w_data226w[1..0]	: WIRE;
	w_data238w[1..0]	: WIRE;
	w_data250w[1..0]	: WIRE;
	w_data262w[1..0]	: WIRE;
	w_data274w[1..0]	: WIRE;
	w_data286w[1..0]	: WIRE;
	w_data298w[1..0]	: WIRE;
	w_data310w[1..0]	: WIRE;
	w_data322w[1..0]	: WIRE;
	w_data334w[1..0]	: WIRE;
	w_data346w[1..0]	: WIRE;
	w_data358w[1..0]	: WIRE;
	w_data370w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data370w[1..1]) # ((! sel_node[]) & w_data370w[0..0])), ((sel_node[] & w_data358w[1..1]) # ((! sel_node[]) & w_data358w[0..0])), ((sel_node[] & w_data346w[1..1]) # ((! sel_node[]) & w_data346w[0..0])), ((sel_node[] & w_data334w[1..1]) # ((! sel_node[]) & w_data334w[0..0])), ((sel_node[] & w_data322w[1..1]) # ((! sel_node[]) & w_data322w[0..0])), ((sel_node[] & w_data310w[1..1]) # ((! sel_node[]) & w_data310w[0..0])), ((sel_node[] & w_data298w[1..1]) # ((! sel_node[]) & w_data298w[0..0])), ((sel_node[] & w_data286w[1..1]) # ((! sel_node[]) & w_data286w[0..0])), ((sel_node[] & w_data274w[1..1]) # ((! sel_node[]) & w_data274w[0..0])), ((sel_node[] & w_data262w[1..1]) # ((! sel_node[]) & w_data262w[0..0])), ((sel_node[] & w_data250w[1..1]) # ((! sel_node[]) & w_data250w[0..0])), ((sel_node[] & w_data238w[1..1]) # ((! sel_node[]) & w_data238w[0..0])), ((sel_node[] & w_data226w[1..1]) # ((! sel_node[]) & w_data226w[0..0])), ((sel_node[] & w_data214w[1..1]) # ((! sel_node[]) & w_data214w[0..0])), ((sel_node[] & w_data202w[1..1]) # ((! sel_node[]) & w_data202w[0..0])), ((sel_node[] & w_data190w[1..1]) # ((! sel_node[]) & w_data190w[0..0])), ((sel_node[] & w_data178w[1..1]) # ((! sel_node[]) & w_data178w[0..0])), ((sel_node[] & w_data164w[1..1]) # ((! sel_node[]) & w_data164w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data164w[] = ( data[18..18], data[0..0]);
	w_data178w[] = ( data[19..19], data[1..1]);
	w_data190w[] = ( data[20..20], data[2..2]);
	w_data202w[] = ( data[21..21], data[3..3]);
	w_data214w[] = ( data[22..22], data[4..4]);
	w_data226w[] = ( data[23..23], data[5..5]);
	w_data238w[] = ( data[24..24], data[6..6]);
	w_data250w[] = ( data[25..25], data[7..7]);
	w_data262w[] = ( data[26..26], data[8..8]);
	w_data274w[] = ( data[27..27], data[9..9]);
	w_data286w[] = ( data[28..28], data[10..10]);
	w_data298w[] = ( data[29..29], data[11..11]);
	w_data310w[] = ( data[30..30], data[12..12]);
	w_data322w[] = ( data[31..31], data[13..13]);
	w_data334w[] = ( data[32..32], data[14..14]);
	w_data346w[] = ( data[33..33], data[15..15]);
	w_data358w[] = ( data[34..34], data[16..16]);
	w_data370w[] = ( data[35..35], data[17..17]);
END;
--VALID FILE
